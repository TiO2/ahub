worker_processes 1;
#error_log /var/log/nginx/error.log debug;

events { worker_connections 1024; }

http {
    proxy_cache_path cache/  keys_zone=auth_cache:10m;
    client_max_body_size 8m;
    ignore_invalid_headers off;
    sendfile on;
    #rewrite_log on;
    gzip off;

    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request - uri: $uri - args: $args';
    access_log  /var/log/nginx/access.log upstreamlog;

    server {
        listen 80;
        
        # Pass this particular URL off to certbot, to authenticate HTTPS certificates
        location ~ /.well-known/acme-challenge(?<path>.+) {
            resolver 127.0.0.11;
            set $certbot_acme certbot:80;
            default_type "text/plain";
            proxy_pass http://$certbot_acme$request_uri;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

#SERVERBLOCK

    server {
        listen 8000;

        location ~ /gui(?<path>.*) {
            resolver            127.0.0.11;
            set $gui            gui:8000;
            #proxy_set_header    Accept-Encoding "";
            #sub_filter_once     off;
            #sub_filter          'src="/'    'src="./';
            #sub_filter          'href="/'   'href="./';

            proxy_pass          http://$gui$path?$args;
        }

        location ~ /boss(?<path>.*) {
            resolver            127.0.0.11;
            set $boss           boss:8000;
            proxy_pass          http://$boss$path?$args;
        }

        location ~ /certbot(?<path>.*) {
            resolver            127.0.0.11;
            set $certbot        certbot:8000;
            proxy_pass          http://$certbot$path?$args;
        }

        location ~ /portainer(?<path>.*) {
             auth_basic         off;
             resolver           127.0.0.11;
             set $portainer     portainer:9000;
             proxy_pass         http://$portainer$path?$args;
             proxy_http_version 1.1;
             proxy_set_header   Host               $host:$server_port;
             proxy_set_header   X-Real-IP          $remote_addr;
             proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Proto  $scheme;
             proxy_set_header   Upgrade            $http_upgrade;
             proxy_set_header   Connection         "upgrade";
        }




    }
}
