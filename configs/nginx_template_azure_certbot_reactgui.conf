worker_processes 1;

events { worker_connections 1024; }

http {
    proxy_cache_path cache/  keys_zone=auth_cache:10m;
    sendfile on;
    
    upstream gui{
        server gui:8000;
    }
    
    upstream boss{
        server boss:8000;
    }
    
    upstream aad-auth{
        server aad-auth:8000;
    }
    
    upstream certbot_api{
        server certbot:8000;
    }
    
    upstream certbot_acme{
        server certbot:80;
    }
    

#INSERTUPSTREAM

    server {
        listen 80;
        
        # Pass this particular URL off to certbot, to authenticate HTTPS certificates
        location /.well-known/acme-challenge {
            default_type "text/plain";
            proxy_pass http://certbot_acme/.well-known/acme-challenge;
        }

        # Everything else gets shunted over to HTTPS
        location / {
            return 301 https://$http_host$request_uri;
        }
        
    }

    server {
        listen 443 ssl;
        ssl_certificate     /etc/letsencrypt/live/$host/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;
        
        # These are the default self-signed certificates, which can be used for first run
        # After letsencrypt certs have been created one should switch to the above definition
        # ssl_certificate     /run/secrets/server.crt;
        # ssl_certificate_key /run/secrets/server.key;
                
        location / {
            # challenge authorization
            auth_basic          "Username and Password are required";
            auth_basic_user_file /run/secrets/.htpasswd;

            proxy_pass http://localhost:8000;
            
        }
    
    }
    
    server {
        listen 8000;
       
        location / {
            proxy_pass         http://gui/;
            proxy_redirect     http://gui/ $scheme://$host/;
            proxy_buffering off;
        }
        
        location /boss/ {
            proxy_pass         http://boss/;
            proxy_redirect     http://boss/ /;
        }
        
        location /certbot/ {
            proxy_pass         http://certbot_api/;
            proxy_redirect     http://certbot_api/ /;
        }

#INSERTLOCATION
    }
}
